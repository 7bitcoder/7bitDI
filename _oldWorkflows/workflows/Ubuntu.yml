name: Ubuntu

on:
  push:
    branches: ["main"]
    paths:
      - "Benchmarks/**"
      - "Cmake/**"
      - "Examples/**"
      - "Include/**"
      - "Source/**"
      - "Tests/**"
      - "CMakeLists.txt"
      - "conanfile.txt"

env:
  BUILD_TYPE: Release
  CONAN_USER_HOME: ~/
  CONAN_HOME_FOLDER: ~/.conan
  BUILD_FLAGS: -DBUILD_UNIT_TESTS:BOOL=ON -DBUILD_INTEGRATION_TESTS:BOOL=ON -DBUILD_BENCHMARKS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Install Conan
        run: sudo pip install conan

      - name: Setup Conan
        run: conan config set storage.download_cache="${{ env.CONAN_HOME_FOLDER }}/download_cache"

      - name: Cache Conan Packages
        uses: actions/cache@v3
        with:
          path: ${{ env.CONAN_HOME_FOLDER }}
          key: ${{ runner.os }}-build-conan-cache-${{ hashFiles('./conanfile.txt') }}

      - name: Install Packages Using Conan
        run: mkdir build && cd ./build && conan install -s build_type=${{ env.BUILD_TYPE }} -s compiler.libcxx=libstdc++11 --build=missing ..

      - name: Install Boost Url
        run: mkdir BoostUrl && cd ./BoostUrl && git clone https://github.com/boostorg/url.git

      - name: Configure CMake
        run: cmake ${{ env.BUILD_FLAGS }} -B ./build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build
        run: cmake --build ./build --config ${{ env.BUILD_TYPE }}

      - name: Install
        run: cmake --install ./build --config ${{ env.BUILD_TYPE }}

      - name: Pack Library
        run: cd ./build/publish/Library && tar -cvf UbuntuLibrary.tar ./

      - name: Pack Unit Tests
        run: cd ./build/publish/UnitTests && tar -cvf UbuntuUnitTests.tar ./

      - name: Pack Integration Tests
        run: cd ./build/publish/IntegrationTests && tar -cvf UbuntuIntegrationTests.tar ./

      - name: Pack Examples
        run: cd ./build/publish/Examples && tar -cvf UbuntuExamples.tar ./

      - name: Pack Benchmarks
        run: cd ./build/publish/Benchmarks && tar -cvf UbuntuBenchmarks.tar ./

      - name: Upload Library
        uses: actions/upload-artifact@v3
        with:
          name: UbuntuLibrary
          path: ./build/publish/Library/UbuntuLibrary.tar

      - name: Upload Unit Tests
        uses: actions/upload-artifact@v3
        with:
          name: UbuntuUnitTests
          path: ./build/publish/UnitTests/UbuntuUnitTests.tar

      - name: Upload Integration Tests
        uses: actions/upload-artifact@v3
        with:
          name: UbuntuIntegrationTests
          path: ./build/publish/IntegrationTests/UbuntuIntegrationTests.tar

      - name: Upload Examples
        uses: actions/upload-artifact@v3
        with:
          name: UbuntuExamples
          path: ./build/publish/Examples/UbuntuExamples.tar

      - name: Upload Benchmarks
        uses: actions/upload-artifact@v3
        with:
          name: UbuntuBenchmarks
          path: ./build/publish/Benchmarks/UbuntuBenchmarks.tar

  test:
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - name: Download Unit Tests
        uses: actions/download-artifact@v3
        with:
          name: UbuntuUnitTests

      - name: Unpack Unit Tests
        run: tar -xvf UbuntuUnitTests.tar

      - name: Run Unit Tests
        run: ./UnitTests

      - name: Download Integration Tests
        uses: actions/download-artifact@v3
        with:
          name: UbuntuIntegrationTests

      - name: Unpack Integration Tests
        run: tar -xvf UbuntuIntegrationTests.tar

      - name: Run Integration Tests
        run: ./IntegrationTests

name: Windows

on:
  push:
    branches: [ "dev" ]
    paths-ignore:
      - "Docs/**"
      - ".readthedocs.yaml"
      - "README.md"

  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "Docs/**"
      - ".readthedocs.yaml"
      - "README.md"

jobs:
  test:
    strategy:
      matrix:
        compiler: [
          { tool: msvc, ver: 140 },
          { tool: msvc, ver: 141 },
          { tool: msvc, ver: 142 },
          { tool: msvc, ver: 143 },
          { tool: mingw, ver: 7.5.0 },
          { tool: mingw, ver: 8.5.0 },
          { tool: mingw, ver: 9.4.0 },
          { tool: mingw, ver: 10.3.0 },
          { tool: mingw, ver: 11.2.0 },
          { tool: mingw, ver: 12.2.0 },
          { tool: mingw, ver: 13.2.0 },
          { tool: LLVM, ver: 8.0.1 },
          { tool: LLVM, ver: 9.0.1 },
          { tool: LLVM, ver: 11.1.0 },
          { tool: LLVM, ver: 12.0.1 },
          { tool: LLVM, ver: 13.0.1 },
          { tool: LLVM, ver: 14.0.6 },
          { tool: LLVM, ver: 15.0.7 },
          { tool: LLVM, ver: 16.0.6 },
          { tool: LLVM, ver: 17.0.6 } ]
        build_type: [ Release ]
        os: [ windows-2019, windows-2022 ]
        std: [ 17 ]
        library_type: [ Static ]
        include:
          - compiler: { tool: mingw }
            cxx: g++
            cc: gcc
            generator: MinGW Makefiles
          - compiler: { tool: LLVM }
            cxx: clang++
            cc: clang
            generator: Ninja
          - compiler: { tool: msvc }
            cxx: ''
            cc: ''
            generator: Visual Studio 17 2022

    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3

      - name: Create Build Environment
        if: matrix.compiler.tool != 'msvc'
        run: choco install ${{matrix.compiler.tool}} --version ${{matrix.compiler.ver}} --allow-downgrade -y && choco install ninja

      - name: Configure
        env:
          CXX: ${{matrix.cxx}}
          CC: ${{matrix.cc}}
          PARAMETER: ${{ matrix.compiler.tool == 'msvc' && format('-A x64 -T v{0}', matrix.compiler.ver) || '' }}
        run: cmake -B ${{runner.workspace}}/build -G ${{matrix.generator}} ${{env.PARAMETER}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DCMAKE_CXX_STANDARD=${{matrix.std}} -D_7BIT_DI_LIBRARY_TYPE=${{matrix.library_type}} -D_7BIT_DI_BUILD_TESTS=ON

      - name: Build
        run: cmake --build ${{runner.workspace}}/build --config ${{matrix.build_type}} -j

      - name: Test
        working-directory: ${{runner.workspace}}/build
        run: ctest -C ${{matrix.build_type}}
        env:
          CTEST_OUTPUT_ON_FAILURE: True

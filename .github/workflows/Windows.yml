name: Windows

on:
  push:
    branches: ["main"]
    paths:
      - "Benchmarks/**"
      - "Cmake/**"
      - "Examples/**"
      - "Include/**"
      - "Source/**"
      - "Tests/**"
      - "CMakeLists.txt"
      - "conanfile.txt"

env:
  BUILD_TYPE: Release
  CONAN_USER_HOME: C:\
  CONAN_HOME_FOLDER: C:\.conan
  BUILD_FLAGS: -DBUILD_UNIT_TESTS:BOOL=ON -DBUILD_INTEGRATION_TESTS:BOOL=ON -DBUILD_BENCHMARKS:BOOL=ON -DBUILD_EXAMPLES:BOOL=ON

jobs:
  build:
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v3

      - name: Install Conan
        run: pip install conan

      - name: Setup Conan
        run: conan config set storage.download_cache="${{ env.CONAN_HOME_FOLDER }}\download_cache"

      - name: Cache Conan Packages
        uses: actions/cache@v3
        with:
          path: ${{ env.CONAN_HOME_FOLDER }}
          key: ${{ runner.os }}-build-conan-cache-${{ hashFiles('./conanfile.txt') }}

      - name: Install Packages Using Conan
        run: mkdir build && cd ./build && conan install -s build_type=${{ env.BUILD_TYPE }} --build=missing ..

      - name: Install Boost Url
        run: mkdir BoostUrl && cd ./BoostUrl && git clone https://github.com/boostorg/url.git

      - name: Configure CMake
        run: cmake ${{ env.BUILD_FLAGS }} -B ./build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build
        run: cmake --build ./build --config ${{ env.BUILD_TYPE }}

      - name: Install
        run: cmake --install ./build --config ${{ env.BUILD_TYPE }}

      - name: Pack Library
        run: cd ./build/publish/Library && Compress-Archive -Path . -DestinationPath ./WindowsLibrary.zip

      - name: Pack Unit Tests
        run: cd ./build/publish/UnitTests && Compress-Archive -Path . -DestinationPath ./WindowsUnitTests.zip

      - name: Pack Integration Tests
        run: cd ./build/publish/IntegrationTests && Compress-Archive -Path . -DestinationPath ./WindowsIntegrationTests.zip

      - name: Pack Examples
        run: cd ./build/publish/Examples && Compress-Archive -Path . -DestinationPath ./WindowsExamples.zip

      - name: Pack Benchmarks
        run: cd ./build/publish/Benchmarks && Compress-Archive -Path . -DestinationPath ./WindowsBenchmarks.zip

      - name: Upload Library
        uses: actions/upload-artifact@v3
        with:
          name: WindowsLibrary
          path: ./build/publish/Library/WindowsLibrary.zip

      - name: Upload Unit Tests
        uses: actions/upload-artifact@v3
        with:
          name: WindowsUnitTests
          path: ./build/publish/UnitTests/WindowsUnitTests.zip

      - name: Upload Integration Tests
        uses: actions/upload-artifact@v3
        with:
          name: WindowsIntegrationTests
          path: ./build/publish/IntegrationTests/WindowsIntegrationTests.zip

      - name: Upload Examples
        uses: actions/upload-artifact@v3
        with:
          name: WindowsExamples
          path: ./build/publish/Examples/WindowsExamples.zip

      - name: Upload Benchmarks
        uses: actions/upload-artifact@v3
        with:
          name: WindowsBenchmarks
          path: ./build/publish/Benchmarks/WindowsBenchmarks.zip

  test:
    needs: build
    runs-on: windows-2022

    steps:
      - name: Download Unit Tests
        uses: actions/download-artifact@v3
        with:
          name: WindowsUnitTests

      - name: Unpack Unit Tests
        run: Expand-Archive -Path ./WindowsUnitTests.zip -DestinationPath .

      - name: Run Unit Test
        run: cd ./UnitTests && ./UnitTests.exe

      - name: Download Integration Tests
        uses: actions/download-artifact@v3
        with:
          name: WindowsIntegrationTests

      - name: Unpack Integration Tests
        run: Expand-Archive -Path ./WindowsIntegrationTests.zip -DestinationPath .

      - name: Run Integration Test
        run: cd ./IntegrationTests && ./IntegrationTests.exe

name: Setup Clang
description: "Sets up the compiler"
inputs:
  version:
    description: "Clang version"
    required: true

runs:
  using: composite
  steps:
    - name: Install Clang
      if: runner.os == 'Windows'
      run: choco install LLVM --version ${{ inputs.version }} ninja --allow-downgrade -y
      shell: pwsh

    - name: Install Clang
      if: runner.os == 'macOS'
      run: brew update && brew install llvm@${{ inputs.version }}
      shell: pwsh

    - name: Install Clang
      if: runner.os == 'Linux'
      run: sudo apt update && sudo apt install clang-${{ inputs.version }} -y
      shell: pwsh

    - name: Set Ninja
      run: cd "C:\\Program Files\\LLVM\\bin" && ls
      shell: bash

    - name: Set Ninja
      run: echo "GENERATOR=Ninja" >> $GITHUB_ENV && echo "MAKE_PROGRAM=ninja" >> $GITHUB_ENV
      shell: bash

    - name: Set CC/CXX
      if: runner.os == 'Windows'
      run: echo "CC=clang" >> $GITHUB_ENV && echo "CXX=clang++" >> $GITHUB_ENV
      shell: bash

    - name: Set CC/CXX
      if: runner.os != 'Windows'
      run: echo "CC=clang-${{ inputs.version }}" >> $GITHUB_ENV && echo "CXX=clang++-${{ inputs.version }}" >> $GITHUB_ENV
      shell: bash

    - name: Update Sys Path
      if: runner.os == 'Windows'
      run: |
        ("C:\\Program Files\\LLVM\\bin;" + (Get-Content -Path $env:GITHUB_PATH)) | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
      shell: pwsh

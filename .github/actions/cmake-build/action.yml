name: Run CMake
description: "Runs CMake"
inputs:
  args:
    description: "Other arguments"
    required: false
    default: ""
  build-type:
    description: "Build type"
    required: false
    default: Release
  toolchain:
    description: "Toolchain file"
    required: false
    default: conan_toolchain.cmake
  library-type:
    description: "Library type"
    required: false
    default: "Static"
  build-dir:
    description: "Build directory"
    required: true

runs:
  using: composite
  steps:
    - name: Configure CMake
      if: ${{ inputs.library-type }} == "Static"
      working-directory: ${{ inputs.build-dir }}
      run: cmake .. -DCMAKE_BUILD_TYPE=${{ inputs.build-type }} -DCMAKE_TOOLCHAIN_FILE:STRING="${{ inputs.toolchain }}" -DBUILD_TESTS:BOOL=true -DBUILD_EXAMPLES:BOOL=true ${{ inputs.args }}
      shell: pwsh

    - name: Configure CMake
      if: ${{ inputs.library-type }} == "Shared"
      working-directory: ${{ inputs.build-dir }}
      run: cmake .. -DCMAKE_BUILD_TYPE=${{ inputs.build-type }} -DSEVEN_BIT_DI_BUILD_SHARED=ON -DCMAKE_TOOLCHAIN_FILE:STRING="${{ inputs.toolchain }}" -DBUILD_TESTS:BOOL=true -DBUILD_EXAMPLES:BOOL=true ${{ inputs.args }}
      shell: pwsh

    - name: Configure CMake
      if: ${{ inputs.library-type }} == "HeaderOnly"
      working-directory: ${{ inputs.build-dir }}
      run: cmake .. -DCMAKE_BUILD_TYPE=${{ inputs.build-type }} -DCMAKE_TOOLCHAIN_FILE:STRING="${{ inputs.toolchain }}" -DSEVEN_BIT_DI_BUILD_TESTS_HO:BOOL=ON -DSEVEN_BIT_DI_BUILD_EXAMPLES_HO:BOOL=ON -DBUILD_TESTS:BOOL=true -DBUILD_EXAMPLES:BOOL=true ${{ inputs.args }}
      shell: pwsh

    - name: Build
      working-directory: ${{ inputs.build-dir }}
      run: cmake --build . --config ${{ inputs.build-type }}
      shell: pwsh
